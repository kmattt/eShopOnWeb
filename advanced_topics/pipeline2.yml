trigger:
- main

variables:
  azureSubscription: 'your-azure-subscription'
  resourceGroup: 'your-resource-group'
  appServiceName: 'your-app-service-name'
  storageAccountName: 'your-storage-account-name'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildJob
    displayName: 'Build Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        dotnet build --configuration Release
      displayName: 'Build Project'

    - script: |
        echo "##vso[task.setvariable variable=BuildConfiguration]Release"
      displayName: 'Set Build Configuration Variable'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy Job'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - script: |
              echo "Deploying to Azure App Service"
            displayName: 'Deploy Script'
            
          - task: AzureWebApp@1
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(appServiceName)
              package: $(Build.ArtifactStagingDirectory)/*.zip
            displayName: 'Azure Web App Deploy'
            condition: eq(variables['BuildConfiguration'], 'Release')

          - task: AzureCLI@2
            inputs:
              azureSubscription: $(azureSubscription)
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage account show -n $(storageAccountName) -g $(resourceGroup)
            displayName: 'Check Storage Account'
            condition: eq(variables['BuildConfiguration'], 'Release')

- stage: ManualApproval
  displayName: 'Manual Approval Stage'
  dependsOn: Deploy
  condition: succeeded()
  jobs:
  - job: ApprovalJob
    displayName: 'Manual Approval Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: ManualValidation@0
      inputs:
        instructions: 'Please review the deployment and approve to proceed.'
        onTimeout: 'reject'
      displayName: 'Manual Approval Check'

- stage: PostApproval
  displayName: 'Post Approval Stage'
  dependsOn: ManualApproval
  condition: and(succeeded(), eq(dependencies.ManualApproval.outputs['ManualValidation.ApprovalJob.approvalStatus'], 'approved'))
  jobs:
  - job: PostApprovalJob
    displayName: 'Post Approval Job'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo "Deployment approved, proceeding with post-approval steps."
      displayName: 'Post-Approval Script'

    - task: AzureFunctionApp@1
      inputs:
        azureSubscription: $(azureSubscription)
        appType: 'functionApp'
        appName: 'your-function-app-name'
        package: $(Build.ArtifactStagingDirectory)/*.zip
      displayName: 'Deploy to Azure Function App'
